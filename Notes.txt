lists-->lists is basically like array

1] if we want to add any element in list we can use append this is simplest way users.append()

2]if we want to append multiple element in list we use extend syntax is user.extend(["",""])

3]if we want to insert any element at particular position we use insert user.insert(position number in integer) user.insert(0)

4]If we want to remove any element then we use pop function users.pop(integer number of the position of element)

5]counting in lists starts with 0

6]we can also use remove function if we are sure to remove a given number in list number.remove(integer)

7]for accessing 2d list we must use i,j in print and in for loop

8]for appending more than 1 element it should .append(["",""])

9]round function is used to balance digits after decimal round(some_integer,2)

10]if u are using range loop in list then it should be len(data)-1 list starts index from 0 so it will go till  4 while as len will be 5 but index will be till 4 so it will give error for sure(stucked many times)

============================================================================================================================
Dictionary

1]we can directly update a dict using update function like states.update({})

2]we can also add keys and value in dict like states["wb"]="kolkata" 

3]The data before : is called key and after : is called value and if u wanna access both then it is .items

4]data.pop(some key) and it will remove specific item while data.popitem(nothing should be written here) and it will remove last item

============================================================================================================================

function
**-->>>*args
def function_name(*args)-->>function call--->function_name("ram","shyam"....)


--->lambda
variable_name =lambda variable_name1: task to be performed
variable_name(value assign)


-->Map --->Map is used for iterarting data inside lists it will complete the task which is assign in lambda
-->Any type of condtion statement like if else etc cannot be given as u cannot change size 
variable_name=map(lambda x:task_To_be_performed,variable_data_stored)

-->Filter it is same like map but here u can change size of list and u can use condtional statement
-->filter(lambda x:if x%2==0,data)


combine of map and filter and lambda

upperSname = map(lambda x:x.upper(),filter(lambda x:x.startswith("s"),users))


--->>inner function

def outer();
    def inner():
    //body
x=outer()   //x=address of function
x()

